worker_processes auto;//设置nginx启动时的 worker进程数量,nginx 始终会启动一个主进程
error_log ./logs/error.log;
pid ./logs/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log ./logs/access.log main;

    sendfile on;
    keepalive_timeout 65;

    server {
        listen 0.0.0.0:80;
        # win10 需要关闭system http 服务对80端口的占用
        server_name *.test.masterdomain.com;
        # 修改host文件更改DNS映射 127.0.0.1 qiyu.test.masterdomain.com这样通过 http://qiyu.test.masterdomain.com可以直接访问到nginx服务,进行请求分发,这种方式不属于正反向代理
        # server_name 用于区分不同域名过来访问同一个IP地址的nginx服务时用来做代理转发的标识符 
        # 如 nginx服务配置的IP地址是 *.test.masterdomain.com的服务,
        # 当aClient通过 a.test.masterdomain.com被DNS映射到该IP的nginx服务上时,nginx可以匹配 server_name a.test.masterdomain.com,使其使用对应的a子域名下的代理规则
        # 当bClient通过 b.test.masterdomain.com被DNS映射到该IP的nginx服务上时,nginx可以匹配 server_name b.test.masterdomain.com,使其使用对应的b子域名下的代理规则
        # 正向代理的本质是相对于服务端来说,客户端是匿名的;反向代理是客户端发送请求到一台代理服务器上,但是这些请求实际转发给谁,客户端是不知道的

        location / {
            proxy_pass https://localhost:8090;
        }

        location /m/ {
            proxy_pass http://localhost:9000;
        }
    }
}