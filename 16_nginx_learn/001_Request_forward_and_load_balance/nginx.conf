# 设置worker进程数，通常为CPU核数
worker_processes auto;

error_log E:/Code/Nginx-Learning/nginx/logs warn;

# 设置pid文件存放路径
# pid /run/nginx.pid;

# 设置events配置，这里采用epoll事件驱动，同时设置最大连接数
events {
  worker_connections 1024;
  # use epoll; windows 不支持使用 epoll 模块
}

# 配置http服务

http {
  # 设置mime类型
  # include /etc/nginx/mime.types;
  # 定义日志格式
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  # 定义访问日志存放路径
  access_log E:/Code/Nginx-Learning/nginx/access.log main;

  # 定义错误日志存放路径
  error_log E:/Code/Nginx-Learning/nginx/logs;

  # 定义upstream节点，用于实现负载均衡
  # upstream myapp {
  #   # 定义两个节点，分别对应3000和6666的端口的服务
  #   server localhost:3000;
  #   server localhost:6666;
  # }

  # upstream 定义两个服务节点 3000 和 6666
  upstream backend_3000 {
    server localhost:3000;
  }

  upstream backend_6666 {
    server localhost:6666;
  }

  server {
    listen 4567;
    # server_name localhost;

    # location 只能放在 server 块里面
    # 配置/api/admin 路径转发到3000端口服务上
    location /api/admin {
      proxy_pass http://backend_3000;
      proxy_set_header Host $host; # 转发原请求的host值
    }

    # 配置/admin 路径转发到6666端口服务上
    location /admin {
      proxy_pass http://backend_6666;
      proxy_set_header Host $host; # 转发原请求头host信息
    }

  }

}